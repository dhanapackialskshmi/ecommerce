# Generated by Django 3.2.7 on 2021-09-27 10:22

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('api', '0046_usertable'),
    ]

    operations = [
        migrations.CreateModel(
            name='Userreg',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^[a-zA-Z]*$', message='Firstname must be in Character')])),
                ('last_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('^[a-zA-Z]*$', message='Lastname must be in Character')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('verified_email', models.BooleanField(default=False)),
                ('mobile_no', models.BigIntegerField(validators=[django.core.validators.RegexValidator('^([0-9]{10})$', message='mobile no must have 10 digit')])),
                ('verified_mobile_no', models.BooleanField(default=False)),
                ('password', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^(?=.*[!$?])(?=.*[a-z])(?=.*[A-Z]).{8}$', message='invalid password.Password must be 8 characters.and atleast 1 numeric and symbols')])),
                ('role', models.CharField(default='guest', max_length=20, validators=[django.core.validators.RegexValidator("^[a-zA-Z -.\\'\\_]+$", message='Role must be in Character')])),
                ('address', models.TextField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='Usertable',
        ),
    ]
